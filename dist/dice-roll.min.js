/*!
 * dice-roll - A basic A/B test library
 * v0.0.4
 * https://github.com/jgallen23/dice-roll
 * copyright Greg Allen 2013
 * MIT License
*/
var max=1e3,monster="undefined"!=typeof module?!1:"undefined"!=typeof ender?require("cookie-monster"):window.monster,DiceRoll=function(a,b){this.expires=b||7,this.key="diceroll-"+a,this.cookieValue=monster?monster.get(this.key):!1,this.tests=[]};DiceRoll.prototype.test=function(a,b){return this.tests.push({percentage:a,callback:b}),this},DiceRoll.prototype.otherwise=function(a){return this.elseCallback=a,this},DiceRoll.prototype.run=function(){for(var a,b,c,d=Math.floor(Math.random()*max+1),e=0,f=0,g=this.tests.length;g>f;f++)if(b=this.tests[f],this.cookieValue?f.toString()==this.cookieValue&&(c=!0,b.callback(b.percentage,f)):(a=b.percentage/100*max,d>=e&&e+a>=d?(monster&&monster.set(this.key,f.toString(),this.expires),b.callback(b.percentage,f),c=!0):c=!1,e+=a+1),c)return;this.elseCallback&&(monster&&monster.set(this.key,f.toString(),this.expires),this.elseCallback(!1,f))};var diceRoll=function(a,b){return new DiceRoll(a,b)};